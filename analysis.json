{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`oe-multistate-toggle`\nA control to switch between specified states\n\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCSS Variable | Description | Default\n----------------|-------------|----------\n`--oe-multistate-toggle-button` | Mixin applied on toggle button\n`--oe-multistate-toggle-label` | Mixin applied on toggle label",
      "summary": "",
      "path": "oe-multistate-toggle.js",
      "properties": [
        {
          "name": "errorPlaceholders",
          "type": "Array | null | undefined",
          "description": "i18n placeholders for the error",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 31,
              "column": 8
            },
            "end": {
              "line": 33,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "userErrorMessage",
          "type": "Object | null | undefined",
          "description": "User specified Custom error message\nIf userErrorMessage is defined, show appropriate user-error-message\nwhich is either an object\n   ```{\n      rangeOverflow:'Date should be prior',\n      default: 'Invalid Value in field'\n   }```\nor a string, 'Invalid value'\nSo check if specific error-coode is defined in user-error-message object\nIf not, see if 'default' error-code is defined\notherwise if user-error-message is string, show that error-message,\nif not, then resort to incoming-error-message.",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 49,
              "column": 8
            },
            "end": {
              "line": 51,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "errorMessage",
          "type": "string | null | undefined",
          "description": "Error message displayed",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 54,
              "column": 8
            },
            "end": {
              "line": 57,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "_hasCustomMessage",
          "type": "boolean | null | undefined",
          "description": "Flag for Custom error message/code",
          "privacy": "protected",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 60,
              "column": 8
            },
            "end": {
              "line": 63,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "hidden",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 65,
              "column": 8
            },
            "end": {
              "line": 69,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "validationFunction",
          "type": "string | null | undefined",
          "description": "Custom validation function",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 72,
              "column": 8
            },
            "end": {
              "line": 74,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "validateOnInput",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 76,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "fieldId",
          "type": "string | null | undefined",
          "description": "binding to property",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 81,
              "column": 8
            },
            "end": {
              "line": 81,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Specifies the label to be displayed beside the toggle.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 6
            },
            "end": {
              "line": 90,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "Property reflecting checked state.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 6
            },
            "end": {
              "line": 99,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "listdata",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 6
            },
            "end": {
              "line": 103,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "Property setting the disabled state.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 6
            },
            "end": {
              "line": 110,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "raised",
          "type": "boolean | null | undefined",
          "description": "Property setting the raised state.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 6
            },
            "end": {
              "line": 118,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_boundOnFocus",
          "type": "Function | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 6
            },
            "end": {
              "line": 124,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Function"
            }
          }
        },
        {
          "name": "_boundOnBlur",
          "type": "Function | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 6
            },
            "end": {
              "line": 131,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Function"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "setValidity",
          "description": "Sets the vality and errorMessage based on the input parameters and\nthe `userErrorMessage`",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 113,
              "column": 4
            },
            "end": {
              "line": 144,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isValid",
              "type": "boolean",
              "description": "boolean flag for validation"
            },
            {
              "name": "errorMessage",
              "type": "string",
              "description": "error message from the input element"
            },
            {
              "name": "errorPlaceholders",
              "type": "Array",
              "description": "placeholders for errors"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "_setValidity",
          "description": "Sets the 'invalid' flag and 'errorMessage'",
          "privacy": "protected",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 152,
              "column": 4
            },
            "end": {
              "line": 159,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isValid",
              "type": "boolean",
              "description": "boolean flag for validation"
            },
            {
              "name": "errorMessage",
              "type": "string",
              "description": "error message from the input element"
            },
            {
              "name": "errorPlaceholders",
              "type": "Array",
              "description": "placeholders for errors"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "_validate",
          "description": "Override in individual elements to return element specific validity.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 165,
              "column": 4
            },
            "end": {
              "line": 170,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "!boolean",
            "desc": "validity of specific element"
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "validate",
          "description": "Validate, overrides Paper-Input-Behavior's validate method\nUsed to set the validity based on core input element's validity",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 177,
              "column": 4
            },
            "end": {
              "line": 221,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "boolean",
            "desc": "validity of core input element."
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "connectedCallback",
          "description": "Registers the field through event , so the parent form can save it.\nBinds the 'validationFunction' property based on its type\nAdds eventListener to input based on 'validateOnInput'",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 228,
              "column": 4
            },
            "end": {
              "line": 249,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "hashFunc",
          "description": "Generates a Hash for the given string.",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 256,
              "column": 4
            },
            "end": {
              "line": 263,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str",
              "type": "string",
              "description": "String for which Hash needs to be computed"
            }
          ],
          "return": {
            "type": "number",
            "desc": "hash number for the given string"
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 2
            },
            "end": {
              "line": 139,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onFocus",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 2
            },
            "end": {
              "line": 143,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onBlur",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 2
            },
            "end": {
              "line": 148,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getLabelClass",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 2
            },
            "end": {
              "line": 154,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "focused"
            }
          ]
        },
        {
          "name": "_getStyle",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 2
            },
            "end": {
              "line": 175,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_getDisplay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 2
            },
            "end": {
              "line": 185,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_nextState",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 2
            },
            "end": {
              "line": 196,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "/demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 38,
          "column": 0
        },
        "end": {
          "line": 198,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OeMultiStateToggle",
      "attributes": [
        {
          "name": "error-placeholders",
          "description": "i18n placeholders for the error",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 31,
              "column": 8
            },
            "end": {
              "line": 33,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "user-error-message",
          "description": "User specified Custom error message\nIf userErrorMessage is defined, show appropriate user-error-message\nwhich is either an object\n   ```{\n      rangeOverflow:'Date should be prior',\n      default: 'Invalid Value in field'\n   }```\nor a string, 'Invalid value'\nSo check if specific error-coode is defined in user-error-message object\nIf not, see if 'default' error-code is defined\notherwise if user-error-message is string, show that error-message,\nif not, then resort to incoming-error-message.",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 49,
              "column": 8
            },
            "end": {
              "line": 51,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "error-message",
          "description": "Error message displayed",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 54,
              "column": 8
            },
            "end": {
              "line": 57,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "hidden",
          "description": "",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 65,
              "column": 8
            },
            "end": {
              "line": 69,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "validation-function",
          "description": "Custom validation function",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 72,
              "column": 8
            },
            "end": {
              "line": 74,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "validate-on-input",
          "description": "",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 76,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "field-id",
          "description": "binding to property",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 81,
              "column": 8
            },
            "end": {
              "line": 81,
              "column": 23
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "label",
          "description": "Specifies the label to be displayed beside the toggle.",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 6
            },
            "end": {
              "line": 90,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value",
          "description": "Property reflecting checked state.",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 6
            },
            "end": {
              "line": 99,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "listdata",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 6
            },
            "end": {
              "line": 103,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "disabled",
          "description": "Property setting the disabled state.",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 6
            },
            "end": {
              "line": 110,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "raised",
          "description": "Property setting the raised state.",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 6
            },
            "end": {
              "line": 118,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "oe-field-error",
          "description": "Fired when the field is invalid",
          "metadata": {},
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "type": "CustomEvent",
          "name": "oe-field-ok",
          "description": "Fired when the field is valid",
          "metadata": {},
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "type": "CustomEvent",
          "name": "register-field",
          "description": "Fired when the element is attached to DOM to register the element",
          "metadata": {},
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oe-multistate-toggle",
      "mixins": [
        "OEFieldMixin"
      ]
    },
    {
      "description": "`oe-multistate-toggle`\nA control to switch between specified states\n\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCSS Variable | Description | Default\n----------------|-------------|----------\n`--oe-multistate-toggle-button` | Mixin applied on toggle button\n`--oe-multistate-toggle-label` | Mixin applied on toggle label",
      "summary": "",
      "path": "oe-slider-toggle.js",
      "properties": [
        {
          "name": "errorPlaceholders",
          "type": "Array | null | undefined",
          "description": "i18n placeholders for the error",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 31,
              "column": 8
            },
            "end": {
              "line": 33,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "userErrorMessage",
          "type": "Object | null | undefined",
          "description": "User specified Custom error message\nIf userErrorMessage is defined, show appropriate user-error-message\nwhich is either an object\n   ```{\n      rangeOverflow:'Date should be prior',\n      default: 'Invalid Value in field'\n   }```\nor a string, 'Invalid value'\nSo check if specific error-coode is defined in user-error-message object\nIf not, see if 'default' error-code is defined\notherwise if user-error-message is string, show that error-message,\nif not, then resort to incoming-error-message.",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 49,
              "column": 8
            },
            "end": {
              "line": 51,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "errorMessage",
          "type": "string | null | undefined",
          "description": "Error message displayed",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 54,
              "column": 8
            },
            "end": {
              "line": 57,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "_hasCustomMessage",
          "type": "boolean | null | undefined",
          "description": "Flag for Custom error message/code",
          "privacy": "protected",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 60,
              "column": 8
            },
            "end": {
              "line": 63,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "hidden",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 65,
              "column": 8
            },
            "end": {
              "line": 69,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "validationFunction",
          "type": "string | null | undefined",
          "description": "Custom validation function",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 72,
              "column": 8
            },
            "end": {
              "line": 74,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "validateOnInput",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 76,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "fieldId",
          "type": "string | null | undefined",
          "description": "binding to property",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 81,
              "column": 8
            },
            "end": {
              "line": 81,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Specifies the label to be displayed beside the toggle.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 6
            },
            "end": {
              "line": 155,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "Property reflecting checked state.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 6
            },
            "end": {
              "line": 164,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "listdata",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 6
            },
            "end": {
              "line": 168,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "Property setting the disabled state.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 6
            },
            "end": {
              "line": 175,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "raised",
          "type": "boolean | null | undefined",
          "description": "Property setting the raised state.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_boundOnFocus",
          "type": "Function | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 6
            },
            "end": {
              "line": 189,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Function"
            }
          }
        },
        {
          "name": "_boundOnBlur",
          "type": "Function | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 6
            },
            "end": {
              "line": 196,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Function"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "setValidity",
          "description": "Sets the vality and errorMessage based on the input parameters and\nthe `userErrorMessage`",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 113,
              "column": 4
            },
            "end": {
              "line": 144,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isValid",
              "type": "boolean",
              "description": "boolean flag for validation"
            },
            {
              "name": "errorMessage",
              "type": "string",
              "description": "error message from the input element"
            },
            {
              "name": "errorPlaceholders",
              "type": "Array",
              "description": "placeholders for errors"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "_setValidity",
          "description": "Sets the 'invalid' flag and 'errorMessage'",
          "privacy": "protected",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 152,
              "column": 4
            },
            "end": {
              "line": 159,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isValid",
              "type": "boolean",
              "description": "boolean flag for validation"
            },
            {
              "name": "errorMessage",
              "type": "string",
              "description": "error message from the input element"
            },
            {
              "name": "errorPlaceholders",
              "type": "Array",
              "description": "placeholders for errors"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "_validate",
          "description": "Override in individual elements to return element specific validity.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 165,
              "column": 4
            },
            "end": {
              "line": 170,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "!boolean",
            "desc": "validity of specific element"
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "validate",
          "description": "Validate, overrides Paper-Input-Behavior's validate method\nUsed to set the validity based on core input element's validity",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 177,
              "column": 4
            },
            "end": {
              "line": 221,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "boolean",
            "desc": "validity of core input element."
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "connectedCallback",
          "description": "Registers the field through event , so the parent form can save it.\nBinds the 'validationFunction' property based on its type\nAdds eventListener to input based on 'validateOnInput'",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 228,
              "column": 4
            },
            "end": {
              "line": 249,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "hashFunc",
          "description": "Generates a Hash for the given string.",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 256,
              "column": 4
            },
            "end": {
              "line": 263,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str",
              "type": "string",
              "description": "String for which Hash needs to be computed"
            }
          ],
          "return": {
            "type": "number",
            "desc": "hash number for the given string"
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 2
            },
            "end": {
              "line": 204,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onFocus",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 2
            },
            "end": {
              "line": 208,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onBlur",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 210,
              "column": 2
            },
            "end": {
              "line": 213,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getLabelClass",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 215,
              "column": 2
            },
            "end": {
              "line": 219,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "focused"
            }
          ]
        },
        {
          "name": "_getStyle",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 229,
              "column": 2
            },
            "end": {
              "line": 240,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_getDisplay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 242,
              "column": 2
            },
            "end": {
              "line": 250,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_nextState",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 251,
              "column": 2
            },
            "end": {
              "line": 261,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "/demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 44,
          "column": 0
        },
        "end": {
          "line": 263,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OeSliderToggle",
      "attributes": [
        {
          "name": "error-placeholders",
          "description": "i18n placeholders for the error",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 31,
              "column": 8
            },
            "end": {
              "line": 33,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "user-error-message",
          "description": "User specified Custom error message\nIf userErrorMessage is defined, show appropriate user-error-message\nwhich is either an object\n   ```{\n      rangeOverflow:'Date should be prior',\n      default: 'Invalid Value in field'\n   }```\nor a string, 'Invalid value'\nSo check if specific error-coode is defined in user-error-message object\nIf not, see if 'default' error-code is defined\notherwise if user-error-message is string, show that error-message,\nif not, then resort to incoming-error-message.",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 49,
              "column": 8
            },
            "end": {
              "line": 51,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "error-message",
          "description": "Error message displayed",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 54,
              "column": 8
            },
            "end": {
              "line": 57,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "hidden",
          "description": "",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 65,
              "column": 8
            },
            "end": {
              "line": 69,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "validation-function",
          "description": "Custom validation function",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 72,
              "column": 8
            },
            "end": {
              "line": 74,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "validate-on-input",
          "description": "",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 76,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "field-id",
          "description": "binding to property",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 81,
              "column": 8
            },
            "end": {
              "line": 81,
              "column": 23
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "label",
          "description": "Specifies the label to be displayed beside the toggle.",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 6
            },
            "end": {
              "line": 155,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value",
          "description": "Property reflecting checked state.",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 6
            },
            "end": {
              "line": 164,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "listdata",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 6
            },
            "end": {
              "line": 168,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "disabled",
          "description": "Property setting the disabled state.",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 6
            },
            "end": {
              "line": 175,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "raised",
          "description": "Property setting the raised state.",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "oe-field-error",
          "description": "Fired when the field is invalid",
          "metadata": {},
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "type": "CustomEvent",
          "name": "oe-field-ok",
          "description": "Fired when the field is valid",
          "metadata": {},
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "type": "CustomEvent",
          "name": "register-field",
          "description": "Fired when the element is attached to DOM to register the element",
          "metadata": {},
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oe-slider-toggle",
      "mixins": [
        "OEFieldMixin"
      ]
    },
    {
      "description": "`oe-toggle`\nA control to switch between two states either through Polymer's paper-toggel-button or paper-icon-button\n\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCSS Variable | Description | Default\n----------------|-------------|----------\n`--paper-toggle-button-checked-bar-color` | Slider button color when the input is checked | `--primary-color`\n`--paper-toggle-button-checked-button-color` | Button color when the input is checked | `--primary-color`\n`--oe-toggle-icon-checked-color` | Icon color when the button is checked | `#3F51B5`\n`--oe-toggle-icon-unchecked-color` | Icon color when the button is unchecked | `#000000`\n`--oe-toggle-label` | Mixin applied on toggle label",
      "summary": "",
      "path": "oe-toggle.js",
      "properties": [
        {
          "name": "errorPlaceholders",
          "type": "Array | null | undefined",
          "description": "i18n placeholders for the error",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 31,
              "column": 8
            },
            "end": {
              "line": 33,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "userErrorMessage",
          "type": "Object | null | undefined",
          "description": "User specified Custom error message\nIf userErrorMessage is defined, show appropriate user-error-message\nwhich is either an object\n   ```{\n      rangeOverflow:'Date should be prior',\n      default: 'Invalid Value in field'\n   }```\nor a string, 'Invalid value'\nSo check if specific error-coode is defined in user-error-message object\nIf not, see if 'default' error-code is defined\notherwise if user-error-message is string, show that error-message,\nif not, then resort to incoming-error-message.",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 49,
              "column": 8
            },
            "end": {
              "line": 51,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "errorMessage",
          "type": "string | null | undefined",
          "description": "Error message displayed",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 54,
              "column": 8
            },
            "end": {
              "line": 57,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "_hasCustomMessage",
          "type": "boolean | null | undefined",
          "description": "Flag for Custom error message/code",
          "privacy": "protected",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 60,
              "column": 8
            },
            "end": {
              "line": 63,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "hidden",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 65,
              "column": 8
            },
            "end": {
              "line": 69,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "validationFunction",
          "type": "string | null | undefined",
          "description": "Custom validation function",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 72,
              "column": 8
            },
            "end": {
              "line": 74,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "validateOnInput",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 76,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "fieldId",
          "type": "string | null | undefined",
          "description": "binding to property",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 81,
              "column": 8
            },
            "end": {
              "line": 81,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Specifies the label to be displayed beside the toggle.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 6
            },
            "end": {
              "line": 86,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "icon",
          "type": "string | null | undefined",
          "description": "Specifies the icon name or index in the set of icons available in\nthe icon's icon set. If given a valid value,\ntoggle icon will be displayed instead of sliding toggle.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 96,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "value",
          "type": "boolean | null | undefined",
          "description": "Property reflecting checked state.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 6
            },
            "end": {
              "line": 105,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "Property setting the disabled state.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 6
            },
            "end": {
              "line": 113,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "setValidity",
          "description": "Sets the vality and errorMessage based on the input parameters and\nthe `userErrorMessage`",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 113,
              "column": 4
            },
            "end": {
              "line": 144,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isValid",
              "type": "boolean",
              "description": "boolean flag for validation"
            },
            {
              "name": "errorMessage",
              "type": "string",
              "description": "error message from the input element"
            },
            {
              "name": "errorPlaceholders",
              "type": "Array",
              "description": "placeholders for errors"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "_setValidity",
          "description": "Sets the 'invalid' flag and 'errorMessage'",
          "privacy": "protected",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 152,
              "column": 4
            },
            "end": {
              "line": 159,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isValid",
              "type": "boolean",
              "description": "boolean flag for validation"
            },
            {
              "name": "errorMessage",
              "type": "string",
              "description": "error message from the input element"
            },
            {
              "name": "errorPlaceholders",
              "type": "Array",
              "description": "placeholders for errors"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "_validate",
          "description": "Override in individual elements to return element specific validity.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 165,
              "column": 4
            },
            "end": {
              "line": 170,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "!boolean",
            "desc": "validity of specific element"
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "validate",
          "description": "Validate, overrides Paper-Input-Behavior's validate method\nUsed to set the validity based on core input element's validity",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 177,
              "column": 4
            },
            "end": {
              "line": 221,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "boolean",
            "desc": "validity of core input element."
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "connectedCallback",
          "description": "Registers the field through event , so the parent form can save it.\nBinds the 'validationFunction' property based on its type\nAdds eventListener to input based on 'validateOnInput'",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 228,
              "column": 4
            },
            "end": {
              "line": 249,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "hashFunc",
          "description": "Generates a Hash for the given string.",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 256,
              "column": 4
            },
            "end": {
              "line": 263,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str",
              "type": "string",
              "description": "String for which Hash needs to be computed"
            }
          ],
          "return": {
            "type": "number",
            "desc": "hash number for the given string"
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "_getFillStyle",
          "description": "Function to set icon's css class.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 2
            },
            "end": {
              "line": 126,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "checked",
              "type": "boolean"
            }
          ],
          "return": {
            "type": "string",
            "desc": "class name to change the CSS"
          }
        },
        {
          "name": "_isIcon",
          "description": "Function to determine display of toggle icon.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 2
            },
            "end": {
              "line": 135,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "icon",
              "type": "string",
              "description": "Icon Name"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "flag denoting whether a icon is needed."
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "/demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 37,
          "column": 0
        },
        "end": {
          "line": 137,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OeToggle",
      "attributes": [
        {
          "name": "error-placeholders",
          "description": "i18n placeholders for the error",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 31,
              "column": 8
            },
            "end": {
              "line": 33,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "user-error-message",
          "description": "User specified Custom error message\nIf userErrorMessage is defined, show appropriate user-error-message\nwhich is either an object\n   ```{\n      rangeOverflow:'Date should be prior',\n      default: 'Invalid Value in field'\n   }```\nor a string, 'Invalid value'\nSo check if specific error-coode is defined in user-error-message object\nIf not, see if 'default' error-code is defined\notherwise if user-error-message is string, show that error-message,\nif not, then resort to incoming-error-message.",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 49,
              "column": 8
            },
            "end": {
              "line": 51,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "error-message",
          "description": "Error message displayed",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 54,
              "column": 8
            },
            "end": {
              "line": 57,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "hidden",
          "description": "",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 65,
              "column": 8
            },
            "end": {
              "line": 69,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "validation-function",
          "description": "Custom validation function",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 72,
              "column": 8
            },
            "end": {
              "line": 74,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "validate-on-input",
          "description": "",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 76,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "field-id",
          "description": "binding to property",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 81,
              "column": 8
            },
            "end": {
              "line": 81,
              "column": 23
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "label",
          "description": "Specifies the label to be displayed beside the toggle.",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 6
            },
            "end": {
              "line": 86,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon",
          "description": "Specifies the icon name or index in the set of icons available in\nthe icon's icon set. If given a valid value,\ntoggle icon will be displayed instead of sliding toggle.",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 96,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value",
          "description": "Property reflecting checked state.",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 6
            },
            "end": {
              "line": 105,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "Property setting the disabled state.",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 6
            },
            "end": {
              "line": 113,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "oe-field-error",
          "description": "Fired when the field is invalid",
          "metadata": {},
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "type": "CustomEvent",
          "name": "oe-field-ok",
          "description": "Fired when the field is valid",
          "metadata": {},
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "type": "CustomEvent",
          "name": "register-field",
          "description": "Fired when the element is attached to DOM to register the element",
          "metadata": {},
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oe-toggle",
      "mixins": [
        "OEFieldMixin"
      ]
    }
  ]
}
